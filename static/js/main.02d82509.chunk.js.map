{"version":3,"sources":["components/Post/Post.module.css","containers/Blog/FullPost/FullPost.module.css","containers/Blog/Blog.module.css","containers/Blog/Posts/Posts.module.css","axios.js","components/Post/Post.js","containers/Blog/FullPost/FullPost.js","containers/Blog/Posts/Posts.js","containers/Blog/Blog.js","hoc/asynchComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","defaults","headers","common","post","props","className","classes","Post","onClick","clicked","title","Info","Author","author","FullPost","state","loadedPost","deletePostHandler","delete","match","params","id","then","response","console","log","this","loadData","get","setState","data","style","textAlign","body","Edit","Delete","Component","Posts","posts","postSelectedHandler","history","push","updatedPosts","slice","map","catch","error","path","url","exact","component","AsyncNewPost","importComponent","cmp","default","C","asyncComponent","Blog","auth","to","activeClassName","activeStyle","color","textDecoration","pathname","hash","search","render","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Axios","interceptors","request","use","Promise","reject","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.02d82509.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__3C_ZM\",\"Author\":\"Post_Author__2tOy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FullPost\":\"FullPost_FullPost__23jwg\",\"Edit\":\"FullPost_Edit__35h2-\",\"Delete\":\"FullPost_Delete__2X7Op\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Blog\":\"Blog_Blog__2p3IZ\",\"active\":\"Blog_active__2wnLJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__1kugU\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n});\r\n\r\ninstance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FROM INSTANCE';\r\n\r\nexport default instance;","import React from 'react';\r\n// import { withRouter } from 'react-router-dom';\r\n\r\nimport classes from './Post.module.css';\r\n\r\nconst post = (props) => (\r\n        <article className={classes.Post} onClick={props.clicked}>\r\n            <h1>{props.title}</h1>\r\n            <div className={classes.Info}>\r\n                <div className={classes.Author}>{props.author}</div>\r\n            </div>\r\n        </article>\r\n    );\r\n\r\nexport default post;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport classes from './FullPost.module.css';\r\n\r\nclass FullPost extends Component {\r\n    state = {\r\n        loadedPost: null\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props);\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData () {\r\n        if ( this.props.match.params.id ) {\r\n            if ( !this.state.loadedPost || (this.state.loadedPost && this.state.loadedPost.id !== +this.props.match.params.id) ) {\r\n                axios.get( '/posts/' + this.props.match.params.id )\r\n                    .then( response => {\r\n                        // console.log(response);\r\n                        this.setState( { loadedPost: response.data } );\r\n                    } );\r\n            }\r\n        }\r\n    }\r\n\r\n    deletePostHandler = () => {\r\n        axios.delete('/posts/' + this.props.match.params.id)\r\n            .then(response => {\r\n                console.log(response);\r\n            });\r\n    }\r\n\r\n    render () {\r\n        let post = <p style={{ textAlign: 'center' }}>Please select a Post!</p>;\r\n        if ( this.props.match.params.id ) {\r\n            post = <p style={{ textAlign: 'center' }}>Loading...!</p>;\r\n        }\r\n        if ( this.state.loadedPost ) {\r\n            post = (\r\n                <div className={classes.FullPost}>\r\n                    <h1>{this.state.loadedPost.title}</h1>\r\n                    <p>{this.state.loadedPost.body}</p>\r\n                    <div className={classes.Edit}>\r\n                        <button onClick={this.deletePostHandler} className={classes.Delete}>Delete</button>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        return post;\r\n    }\r\n}\r\n\r\nexport default FullPost;","import React, { Component } from 'react';\r\nimport axios from '../../../axios';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Post from '../../../components/Post/Post';\r\nimport classes from './Posts.module.css';\r\nimport FullPost from '../FullPost/FullPost';\r\n\r\nclass Posts extends Component {\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log( this.props );\r\n        axios.get( '/posts' )\r\n            .then( response => {\r\n                const posts = response.data.slice( 0, 4 );\r\n                const updatedPosts = posts.map( post => {\r\n                    return {\r\n                        ...post,\r\n                        author: 'Max'\r\n                    }\r\n                } );\r\n                this.setState( { posts: updatedPosts } );\r\n                // console.log( response );\r\n            } )\r\n            .catch( error => {\r\n                console.log( error );\r\n                // this.setState({error: true});\r\n            } );\r\n    }\r\n\r\n    postSelectedHandler = ( id ) => {\r\n        // this.props.history.push({pathname: '/posts/' + id});\r\n        this.props.history.push( '/posts/' + id );\r\n    }\r\n\r\n    render () {\r\n        let posts = <p style={{ textAlign: 'center' }}>Something went wrong!</p>;\r\n        if ( !this.state.error ) {\r\n            posts = this.state.posts.map( post => {\r\n                return (\r\n                    // <Link to={'/posts/' + post.id} key={post.id}>\r\n                    <Post\r\n                        key={post.id}\r\n                        title={post.title}\r\n                        author={post.author}\r\n                        clicked={() => this.postSelectedHandler( post.id )} />\r\n                    // </Link>\r\n                );\r\n            } );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <section className={classes.Posts}>\r\n                    {posts}\r\n                </section>\r\n                <Route path={this.props.match.url + '/:id'} exact component={FullPost} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react';\r\n// import axios from 'axios';\r\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport classes from  './Blog.module.css';\r\nimport Posts from './Posts/Posts';\r\nimport asyncComponent from '../../hoc/asynchComponent';\r\n// import NewPost from './NewPost/NewPost';\r\n\r\nconst AsyncNewPost =  asyncComponent(() => {\r\n    return import('./NewPost/NewPost');\r\n});\r\n\r\nclass Blog extends Component {\r\n\r\n    state = {\r\n        auth: true\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div className={classes.Blog}>\r\n                <header>\r\n                    <nav>\r\n                        <ul>\r\n                            <li><NavLink\r\n                                to=\"/posts/\"\r\n                                exact\r\n                                activeClassName=\"my-active\"\r\n                                activeStyle={{\r\n                                    color: '#fa923f',\r\n                                    textDecoration: 'underline'\r\n                                }}>Posts</NavLink></li>\r\n                            <li><NavLink to={{\r\n                                pathname: '/new-post',\r\n                                hash: '#submit',\r\n                                search: '?quick-submit=true'\r\n                            }}>New Post</NavLink></li>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n                {/* <Route path=\"/\" exact render={() => <h1>Home</h1>} />\r\n                <Route path=\"/\" render={() => <h1>Home 2</h1>} /> */}\r\n                <Switch>\r\n                    {this.state.auth ? <Route path=\"/new-post\" component={AsyncNewPost} /> : null}\r\n                    <Route path=\"/posts\" component={Posts} />\r\n                    <Route render={() => <h1>Not Found</h1>} />\r\n                    {/* <Redirect from=\"/\" to=\"/posts\" /> */}\r\n                    {/* <Route path=\"/\" component={Posts} /> */}\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = { \r\n            component: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default asyncComponent;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Blog from './containers/Blog/Blog';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Blog />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from 'axios';\nimport Axios from 'axios';\n\n// axios.defaults.baseURL = 'https://jsonplaceholder.typicode.com';\n// axios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\nAxios.defaults.headers.post['Content-Type'] = 'application/json'\n\naxios.interceptors.request.use(request => {\n    // console.log(request);\n    return request;\n}, error => {\n    console.log(error);\n    return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n    console.log(response);\n    return response;\n}, error => {\n    console.log(error);\n    return Promise.reject(error);\n});\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}